import React, { Component } from 'react';
import '../App.css';
import DatePicker from './DatePicker';

function formatShares(value){
    return Number(value).toLocaleString('en');
}

function formatCurrency(value){
    return Number(value).toLocaleString('en-US', {
                                         style: 'currency',
                                         currency: 'USD' });
}

// function calculateSum (arr){
//   return arr.reduce(function(a,b){
//     return a + b
//   }, 0);
// }

// function calculateSum(arr, type) {
//   return arr.reduce((total, obj) => {
//     if (typeof obj[type] === 'string') {
//       return total + Number(obj[type]);
//     }
//     return total + obj[type];
//   }, 0);
// }



class App extends Component {
    constructor(props) {
        super(props);

        this.state = {
            investments: [],
            isLoaded: false,
            showAssets: false,
        }
        this.onShowAssetsClicl = this.onShowAssetsClicl.bind(this);

    }

    componentDidMount() {
        const url = "https://gist.githubusercontent.com/cranium/d8b83184bf0750f2c834760b7c9203dc/raw/a73a70716951f77b90e84b8848ff1fee46938dd1/soi.json"
        fetch(url)
            .then(res => res.json())
            .then(json => {
                this.setState({
                    isLoaded: true,
                    investments: json,
                })
            });
    }


    onShowAssetsClicl() {
        alert("clicked")
        // this.setState({
        //     showAssets: !this.state.showAssets
        // });
    }

    renderInvestment(investment) {
        return (
            <React.Fragment key={investment.id}>
            <tr className="rowStyling">
                <td >{investment.name}</td>
                


                <td colSpan="2"><button onClick={()=>this.onShowAssetsClicl()}>Show Assets</button></td>
                
                


                <td className="rightAlign">{formatShares(investment.quantity)}</td>
                <td className="rightAlign">{ formatCurrency((investment.cost.$))}</td>
            </tr>
            
            {investment.issued_assets.map(asset =>(
                <tr key={asset.id}>
                    <td></td>
                    <td className="leftAlign">{asset.asset_class}</td>
                    <td className="leftAlign">{asset.investment_date}</td>
                    <td className="rightAlign">{formatShares(asset.quantity)}</td>
                    <td className="rightAlign">{formatCurrency(asset.cost.$)}</td>
                </tr>
            ))}
            </React.Fragment>

            
        );
    }

    // {
    //     let assetsCosts = [];
    //     let investments = this.state
    //     investments.map((investments.cost.$, index)=> {
    //         return assetsCosts.push(investments.cost.$)
    //     })

    //     console.log('assetsCosts : ', assetsCosts);
    // }


    
    // { let assetsCosts = 0;
    //         for (let i=0, i<len.this.state.investments, i++) {
    //             assetsCosts + (this.state.investments.cost.$)
    //         }
    
    //         console.log(assetsCosts);
    // }
    
    render() {        

        let { isLoaded, investments } = this.state;


      
        // console.log('Asset Cost :', assetsCosts);

        // assetsCosts.push(investments.map(invetment => key={id}, {investment.cost.$}))

        // console.log(investments.cost.$);

        if (!isLoaded) {
            return <div> loading ... </div>
        } 
        else{
            return (
                <div className="App">
                <DatePicker />
                    <table>
                        <thead>
                            <tr>
                                <th colSpan="5" className="leftAlign">Krakatoa Ventures Fund I, L.P. <br/>
                                                                      As of 11/19/2018 . Generated by Fred Admin'strator(admin@esharesinc.com) 
                                                                      at 11/19/2018 11:58:23
                                </th>
                            </tr>
                            <tr>
                                <th className="leftAlign">Investment</th>
                                <th className="leftAlign">Asset</th>
                                <th className="leftAlign">Investment date</th>
                                <th style={{textAlign: 'right'}}>Shares</th>
                                <th style={{textAlign: 'right'}}>Cost</th>
                            </tr>                            
                        </thead>
                        <tbody>
                            {investments.map(this.renderInvestment)}
                               
                        </tbody>
                        <tfoot className="rowStyling">
                            <tr>
                                <td colSpan="4" >Total</td>
                                <td className="rightAlign">{formatCurrency(100000)}</td>
                            </tr>
                        </tfoot>
                    </table>
                    
                </div>
            ); 
        }
        
    }
}

export default App;
